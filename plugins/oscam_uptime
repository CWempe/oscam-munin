#!/usr/bin/perl -w
# -*- mode: cperl; mode: autopair -*-
# Magic markers:
#%# family=auto
#%# capabilities=autoconf
# oscam_uptime - Determine the current uptime rate for OSCam.

# Copyright (C) 2013 MoonMaker <moonmaker@gmx.de>

# Author: MoonMaker <moonmaker@gmx.de>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# .
# This package is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# .
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
# .
# On Debian systems, the complete text of the GNU General
# Public License version 3 can be found in "/usr/share/common-licenses/GPL-3".

=head1 NAME

oscam_uptime - Munin plugin to show the OSCam uptime.
=encoding utf8

=head1 APPLICABLE SYSTEMS

Any oscam host

=head1 CONFIGURATION

This shows the default configuration of this plugin.  You can override
the status URL and User Agent.

  [oscam_*]
  env.host http://localhost:8888
  env.ua oscam-status-verifier/0.1
  env.username root
  env.password oscam

  [oscam_userstats_*]
  env.userstats_url oscamapi.html?part=userstats
  group user

  [oscam_totalstats]
  env.totalstats_url oscamapi.html?part=userstats

  [oscam_uptime]
  env.uptime_url oscamapi.html?part=status

=head1 MAGIC MARKERS

  #%# family=auto
  #%# capabilities=autoconf

=head1 VERSION

1.1

=head1 BUGS

None known

=head1 AUTHOR

MoonMaker <moonmaker@gmx.de>

=head1 REPOSITORY

Source code at https://code.launchpad.net/~oscam/+junk/oscam-munin

=head1 LICENSE

GPLv3

=cut

use Munin::Plugin;

my $ret = undef;

if (! eval "require LWP::UserAgent;") {
  $ret = "LWP::UserAgent not found";
}

if (! eval "require XML::LibXML;") {
  $ret = "XML::LibXML not found";
}


chomp(my $fqdn=`hostname -f`);


## Environment defined variables.
## The default URL is oscamapi.html?part=status if different set it in the environment.
my $HOST = exists $ENV{'host'} ? $ENV{'host'} : "http://$fqdn:8888";
my $UPTIME_URL = exists $ENV{'uptime_url'} ? $ENV{'uptime_url'} : "oscamapi.html?part=status";
my $URL = "$HOST/$UPTIME_URL";

## The default user agent is oscam-status-verifier/0.1 if different
## set it in the environment.
my $UA = exists $ENV{'ua'} ? $ENV{'ua'} : 'oscam-status-verifier/0.1';

# Oscam Username and Password
my $USERNAME = exists $ENV{'username'} ? $ENV{'username'} : 'root';
my $PASSWORD = exists $ENV{'password'} ? $ENV{'password'} : 'oscam';

# Connect to Oscam
sub connect_oscam
{
  my ( $URL, $USERNAME, $PASSWORD, $UA, $MODE ) = @_;

  my $ua = LWP::UserAgent->new(	env_proxy => 0,	keep_alive => 0, timeout => 30 );

  # Set the UA to something different from the libwww-perl.
  # That UA is blocked.
  $ua->agent($UA);
  my $request = HTTP::Request->new('GET',$URL);

  # authenticate
  $request->authorization_basic($USERNAME, $PASSWORD);

  # Get request
  my $response = $ua->request($request);

  # get content of response
  my $content = $response->content();
  unless ($response->is_success and $content =~ /^<\?xml/im)
  {
	if ($MODE eq 'autoconf') {
		print "no (no OSCam status on $URL)\n";
		exit 1;
	} else {
		print "uptime.value U\n";
		exit 0;
	}

  } else {
	return $content;
  }
}


# Test AutoConf
if (exists $ARGV[0] and $ARGV[0] eq "autoconf") {
  if ($ret) {
    print "no ($ret)\n";
    exit 1;
  }

  # Connect to OSCam
  my $content = connect_oscam( $URL, $USERNAME, $PASSWORD, $UA, 'autoconf' );
  
  # Connection was successfully
  print "yes\n";
  exit 0;

}

## Munin config method.
if (exists $ARGV[0] and $ARGV[0] eq "config") {
  print "graph_title OSCam uptime\n";
  print "graph_args --base 1000 -l 0\n";
  print "graph_category oscam\n";
  print "graph_vlabel uptime in hours\n";
  print "graph_scale no\n";
  print "graph_info How long is OSCam running?\n";
  print "uptime.label uptime\n";
  print "uptime.info Your OSCam uptime\n";
  print "uptime.draw AREA\n";

  exit 0;
}

# Connect to OSCam
my $content = connect_oscam( $URL, $USERNAME, $PASSWORD, $UA, 'standard' );

# apt-get install libxml-libxml-perl
# Or with cpan -> install XML::LibXML
use XML::LibXML;
my $parser = XML::LibXML->new();
my $doc = $parser->load_xml(string=>$content);

#grab the url of the next result set
my $result = $doc->findvalue('/oscam/@uptime') ."\n";
my $uptime=$result/60/60;

print "uptime.value $uptime\n"


